name: CI

on:
  push:
  workflow_dispatch:

jobs:
  build-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: cache
        id: cache-key
        run: echo "CLIENT_CACHE_KEY=client-cache-${{ hashFiles('client/**') }}" >> $GITHUB_OUTPUT
      - uses: actions/cache/restore@v4
        id: restore-cache
        with:
          path: server/static
          key: ${{ steps.cache-key.outputs.CLIENT_CACHE_KEY }}
      - name: Setup node
        if: ${{ !steps.restore-cache.outputs.cache-hit }}
        uses: actions/setup-node@v4
        with:
          node-version: latest
          architecture: x64
          check-latest: true
          cache: npm
          cache-dependency-path: "**/package.json"
      - name: Build client
        if: ${{ !steps.restore-cache.outputs.cache-hit }}
        run: |
          cd client
          npm install
          NODE_OPTIONS=--openssl-legacy-provider npm run build
      - uses: actions/cache/save@v4
        if: ${{ !steps.restore-cache.outputs.cache-hit }}
        with:
          path: server/static
          key: ${{ steps.restore-cache.outputs.CLIENT_CACHE_KEY }}
      - name: Upload result
        uses: actions/upload-artifact@v4
        with:
          name: static
          path: server/static

  build-server:
    runs-on: ubuntu-latest
    needs: [build-client]
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-windows-gnu
          - x86-windows-gnu
          - aarch64-windows-gnu
          - x86_64-linux-gnu
          - x86-linux-gnu
          - aarch64-linux-gnu
          - x86_64-linux-musl
          - x86-linux-musl
          - aarch64-linux-musl
          - x86_64-macos.11.0-none
          - aarch64-macos.11.0-none
          - mipsel-linux-musl
        include:
          - { target: x86_64-windows-gnu, ext: ".exe" }
          - { target: x86-windows-gnu, ext: ".exe" }
          - { target: aarch64-windows-gnu, ext: ".exe" }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        name: static
      - name: Build executable
        run: |
          mv static server-c/
          mkdir -p server-c/build
          cd server-c/build
          cmake -DZIG_TARGET=${{ matrix.target }} -DPACKAGE_FILE=ON -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
          tar -czvf cloud_clipboard.tar.gz cloud_clipboard${{ matrix.ext }}

      - name: Upload result
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: server-c/build/cloud_clipboard.tar.gz